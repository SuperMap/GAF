version: '3'

networks:
  gaf-net:
    external: true

services:
  gaf-microservice-rigister:
    image: ${GAF_REGISTRY}gaf-microservice-rigister:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    env_file:
    - ${GAF_VOL_DIR}/GAF_ENV_CONFIG.env
    ports:
    - 8761:8080
    container_name: gaf-microservice-rigister
    restart: always
  gaf-microservice-conf:
    image: ${GAF_REGISTRY}gaf-microservice-conf:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    env_file:
    - ${GAF_VOL_DIR}/GAF_ENV_CONFIG.env
    container_name: gaf-microservice-conf
    restart: always
  gaf-microservice-api:
    image: ${GAF_REGISTRY}gaf-microservice-api:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    env_file:
    - ${GAF_VOL_DIR}/GAF_ENV_CONFIG.env
    restart: always
    container_name: gaf-microservice-api
  gaf-microservice-gateway:
    image: ${GAF_REGISTRY}gaf-microservice-gateway:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    env_file:
    - ${GAF_VOL_DIR}/GAF_ENV_CONFIG.env
    ports:
    - 30777:8080
    restart: always
    container_name: gaf-microservice-gateway
  gaf-sys-mgt:
    image: ${GAF_REGISTRY}gaf-sys-mgt:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    env_file:
    - ${GAF_VOL_DIR}/GAF_ENV_CONFIG.env
    container_name: gaf-sys-mgt
    restart: always
  gaf-authentication:
    image: ${GAF_REGISTRY}gaf-authentication:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    env_file:
    - ${GAF_VOL_DIR}/GAF_ENV_CONFIG.env
    container_name: gaf-authentication
    restart: always
  gaf-authority:
    image: ${GAF_REGISTRY}gaf-authority:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    env_file:
    - ${GAF_VOL_DIR}/GAF_ENV_CONFIG.env
    container_name: gaf-authority
    restart: always
  gaf-microservice-governance:
    image: ${GAF_REGISTRY}gaf-microservice-governance:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    env_file:
    - ${GAF_VOL_DIR}/GAF_ENV_CONFIG.env
    container_name: gaf-microservice-governance
    restart: always
  gaf-portal:
    image: ${GAF_REGISTRY}gaf-portal:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    env_file:
    - ${GAF_VOL_DIR}/GAF_ENV_CONFIG.env
    container_name: gaf-portal
    restart: always
  gaf-map:
    image: ${GAF_REGISTRY}gaf-map:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    ports:
    - 1947
    volumes:
    - ${GAF_VOL_DIR}/License:/opt/SuperMap/License
    - ${GAF_VOL_DIR}/mnt/data-s3fs:/data-s3fs:shared
    env_file:
    - ${GAF_VOL_DIR}/GAF_ENV_CONFIG.env
    container_name: gaf-map
    restart: always
  gaf-data-mgt:
    image: ${GAF_REGISTRY}gaf-data-mgt:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    env_file:
    - ${GAF_VOL_DIR}/GAF_ENV_CONFIG.env
    volumes:
    - ${GAF_VOL_DIR}/mnt/data-s3fs:/data-s3fs:shared
    restart: always
    container_name: gaf-data-mgt
  gaf-storage:
    image: ${GAF_REGISTRY}gaf-storage:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    env_file:
    - ${GAF_VOL_DIR}/GAF_ENV_CONFIG.env
    environment:
      GAF_STORAGE_EUREKA_ENABLE: 'true'
      GAF_STORAGE_EUREKA_ADDR: http://gaf-microservice-rigister:8080/eureka/
      GAF_STORAGE_DB_USERNAME: admin
      GAF_STORAGE_DB_URL: jdbc:postgresql://gaf-postgres:5432/gaf-storage
      GAF_STORAGE_DB_PASSWORD: 123456
      GAF_STORAGE_AUTHENTICATION_ENABLE: 'false'
    container_name: gaf-storage
    restart: always
  gaf-monitor:
    image: ${GAF_REGISTRY}gaf-monitor:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    env_file:
    - ${GAF_VOL_DIR}/GAF_ENV_CONFIG.env
    container_name: gaf-monitor
    restart: always
  gaf-analysis:
    image: ${GAF_REGISTRY}gaf-analysis:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    env_file:
    - ${GAF_VOL_DIR}/GAF_ENV_CONFIG.env
    container_name: gaf-analysis
    restart: always
  gaf-webapp:
    image: ${GAF_REGISTRY}gaf-webapp:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    restart: always
    container_name: gaf-webapp
  gaf-mapapp:
    image: ${GAF_REGISTRY}gaf-mapapp:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    restart: always
    container_name: gaf-mapapp
  gaf-boot:
    image: ${GAF_REGISTRY}gaf-boot:${GAF_REGISTRY_TAG}
    networks:
    - gaf-net
    ports:
    - 1947
    - 80:7777
    volumes:
    - ${GAF_VOL_DIR}/License:/opt/SuperMap/License
    - ${GAF_VOL_DIR}/mnt/data-s3fs:/data-s3fs:shared
    env_file:
    - ${GAF_VOL_DIR}/GAF_ENV_CONFIG.env
    container_name: gaf-boot
    restart: always


  gaf-postgres:
    image: registry.cn-hangzhou.aliyuncs.com/supermap-gaf/postgres:10.10
    networks:
    - gaf-net
    ports:
    - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: gaf
    volumes:
    - ${GAF_VOL_DIR}/vol_pg-data:/var/lib/postgresql/data
    container_name: gaf-postgres
    command: postgres -c 'max_connections=2000'
  gaf-redis:
    image: registry.cn-hangzhou.aliyuncs.com/supermap-gaf/redis:5
    networks:
    - gaf-net
    container_name: gaf-redis
    command: ["redis-server","/usr/local/bin/redis.conf"]
  gaf-minio:
    image: registry.cn-hangzhou.aliyuncs.com/supermap-gaf/minio:latest
    networks:
    - gaf-net
    ports:
    - 9000:9000
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123456
      MINIO_API_CORS_ALLOW_ORIGIN: '*'
    volumes:
    - ${GAF_VOL_DIR}/mnt/data:/data
    container_name: gaf-minio
    command: server /data
  gaf-s3fs-mount:
    image: registry.cn-hangzhou.aliyuncs.com/supermap-gaf/gaf-s3fs-mount:v2.0
    networks:
    - gaf-net
    privileged: true
    environment:
      GAF_USERNAME: sys_admin
      GAF_PASSWORD: 123456
      GAF_TOKEN_URL: http://gaf-authentication:8080/authentication/token
      GAF_CONFIG_URL: http://gaf-storage:8080/storage/volume/config-ini
    volumes:
    - ${GAF_VOL_DIR}/mnt/data-s3fs:/data-s3fs:shared
    container_name: gaf-s3fs-mount
  gaf-s3fs-mount-forboot:
    image: registry.cn-hangzhou.aliyuncs.com/supermap-gaf/gaf-s3fs-mount:v2.0
    networks:
    - gaf-net
    privileged: true
    environment:
      GAF_USERNAME: sys_admin
      GAF_PASSWORD: 123456
      GAF_TOKEN_URL: http://gaf-boot:8080/authentication/token
      GAF_CONFIG_URL: http://gaf-boot:8080/storage/volume/config-ini
    volumes:
    - ${GAF_VOL_DIR}/mnt/data-s3fs:/data-s3fs:shared
    container_name: gaf-s3fs-mount
  gaf-cadvisor:
    image: registry.cn-hangzhou.aliyuncs.com/supermap-gaf/cadvisor:v0.33.0
    networks:
    - gaf-net
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    container_name: gaf-cadvisor
  gaf-node-exporter:
    image: registry.cn-hangzhou.aliyuncs.com/supermap-gaf/node-exporter:v1.0.1
    networks:
    - gaf-net
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
    command:
    - '--path.procfs=/host/proc'
    - '--path.sysfs=/host/sys'
    - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
    - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
    container_name: gaf-node-exporter
  gaf-prometheus:
    image: registry.cn-hangzhou.aliyuncs.com/supermap-gaf/prometheus:v2.23.0
    networks:
    - gaf-net
    ports:
    - 9090:9090
    volumes:
    - ${GAF_VOL_DIR}/vol_prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    - ${GAF_VOL_DIR}/vol_prometheus/data:/prometheus
    container_name: gaf-prometheus
    restart: always
    command: ["--config.file=/etc/prometheus/prometheus.yml","--storage.tsdb.path=/prometheus"]
  gaf-grafana:
    image: registry.cn-hangzhou.aliyuncs.com/supermap-gaf/grafana:7.3.1-ubuntu
    networks:
    - gaf-net
    ports:
    - 3000:3000
    volumes:
    - ${GAF_VOL_DIR}/vol_grafana/grafana.ini:/etc/grafana/grafana.ini
    - ${GAF_VOL_DIR}/vol_grafana/index.html:/usr/share/grafana/public/views/index.html
    container_name: gaf-grafana
  gaf-elasticsearch:
    image: registry.cn-hangzhou.aliyuncs.com/supermap-gaf/elasticsearch:7.9.3
    networks:
    - gaf-net
    ports:
    - 9200:9200
    environment:
      discovery.type: single-node
    volumes:
    - ${GAF_VOL_DIR}/vol_elasticsearch/data:/usr/share/elasticsearch/data
    container_name: gaf-elasticsearch
    restart: always
  gaf-fluentd-es:
    image: registry.cn-hangzhou.aliyuncs.com/supermap-gaf/fluentd-es:1.0
    networks:
    - gaf-net
    volumes:
    - ${GAF_VOL_DIR}/vol_fluentd-es/fluent.conf:/fluentd/etc/fluent.conf
    container_name: gaf-fluentd-es
  gaf-zipkin:
    image: registry.cn-hangzhou.aliyuncs.com/supermap-gaf/zipkin:2
    networks:
    - gaf-net
    environment:
      STORAGE_TYPE: elasticsearch
      ES_HOSTS: http://gaf-elasticsearch:9200
    container_name: gaf-zipkin
